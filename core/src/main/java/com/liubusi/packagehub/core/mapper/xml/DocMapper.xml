<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liubusi.packagehub.core.mapper.DocMapper">

    <select id="listParentCategoryById" resultType="com.liubusi.packagehub.common.pojo.vo.DocVO">
        SELECT T1.level, T2.title
        FROM (
        SELECT
        @r AS _id,
        (SELECT @r := parent_id FROM doc WHERE id = _id) AS parent_id,
        @l := @l + 1 AS level
        FROM
        (SELECT @r := #{id}, @l := 0) vars,
        doc h
        WHERE @r &lt;&gt; 0) T1
        JOIN doc T2
        ON T1._id = T2.id
        ORDER BY T1.level DESC
    </select>

    <select id="listMenuById" resultType="com.liubusi.packagehub.common.pojo.vo.DocVO">
        SELECT T2.level, T3.*
        FROM(
                SELECT @codes as _ids,
                       ( SELECT @codes := GROUP_CONCAT(id)
                         FROM doc
                         WHERE FIND_IN_SET(parent_id, @codes)
                       ) as T1,
                       @l := @l+1 as level
                FROM doc,
                     (SELECT @codes := #{id}, @l := -1 ) T4
                WHERE @codes IS NOT NULL
            ) T2, doc T3
        WHERE FIND_IN_SET(T3.id, T2._ids)
          and id != #{id}
        ORDER BY level, position
        ;
    </select>

    <insert id="saveCategory">
        insert into doc (`id`, `title`, `parent_id`, `department`, `description`, `is_doc`, `pub_status`)
        values (#{id}, #{title}, #{parentId}, #{department}, #{description}, #{isDoc}, #{pubStatus})
    </insert>
    <insert id="saveMenu">
        INSERT INTO doc (`id`, `title`, `parent_id`, `position`) VALUES (
        #{id}, #{title}, #{parentId},
        (select position from
            (select IFNULL((select position from doc where parent_id = #{parentId} order by position limit 1)-1, 888)position)position)
        )
    </insert>

    <delete id="remove">
        delete from doc where id in (select id from (
            SELECT T3.id
            FROM(
                    SELECT @codes as _ids,
                           ( SELECT @codes := GROUP_CONCAT(id)
                             FROM doc
                             WHERE FIND_IN_SET(parent_id, @codes)
                           ) as T1,
                           @l := @l+1 as level
                    FROM doc,
                         (SELECT @codes := #{id}, @l := -1 ) T4
                    WHERE @codes IS NOT NULL
                ) T2, doc T3
            WHERE FIND_IN_SET(T3.id, T2._ids)
        )id
        )
    </delete>

    <update id="updatePositionByBefore">
        update doc set position = position -1 where parent_id =
          (select parent_id from (select parent_id from doc where id = #{destId})a)
          and position &lt; (select position from (select position from doc where id = #{destId})b);
        update doc set position =
          (select position from (select (select position from doc where id = #{destId})-1 position) position),
          parent_id = (select parent_id from (select parent_id from doc where id = #{destId}) parent_id)
          where id = #{id};
    </update>
    <update id="updatePositionByAfter">
        update doc set position = position +1 where parent_id =
          (select parent_id from (select parent_id from doc where id = #{destId})a)
          and position > (select position from (select position from doc where id = #{destId})b);
        update doc set position =
          (select position from (select (select position from doc where id = #{destId})+1 position) position),
          parent_id = (select parent_id from (select parent_id from doc where id = #{destId}) parent_id)
          where id = #{id};
    </update>
    <update id="updatePositionByInner">
        update doc set position =
          (select position from (select IFNULL((select min(position) from doc where parent_id = #{destId})-1, 888)position)position),
          parent_id = #{destId} where id = #{id};
    </update>

</mapper>
